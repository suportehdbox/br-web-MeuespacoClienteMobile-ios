//
//  ParcelsView.m
//  appsegurado
//
//  Created by Luiz othavio H Zenha on 26/10/16.
//  Copyright Â© 2016 Liberty Seguros. All rights reserved.
//

#import "ParcelsView.h"
#import "ParcelsViewCell.h"
#import "PaymentBeans.h"

#import "../GoogleAnalytics/GAI.h"
#import "../GoogleAnalytics/GAIFields.h"
#import "../GoogleAnalytics/GAIDictionaryBuilder.h"
@interface ParcelsView(){
    NSMutableArray *arrayParcels;
}
@end
@implementation ParcelsView

-(void) loadView{
    arrayParcels = [[NSMutableArray alloc] init];
    [self setBackgroundColor:[BaseView getColor:@"CinzaFundo"]];
    [BaseView addDropShadow:_bgTable];
    
    [_lblDescription setFont:[BaseView getDefatulFont:Small bold:NO]];
    [_lblDescription setTextColor:[BaseView getColor:@"Branco"]];
    [_lblDescription setHidden:YES];
    [_lblTitle setText:NSLocalizedString(@"", @"")];
    [_lblTitle setFont:[BaseView getDefatulFont:Small bold:NO]];
    [_lblTitle setTextColor:[BaseView getColor:@"Verde"]];
    [_lblTitle setHidden:YES];
    [_imgIcon setHidden:YES];
}
-(void) unloadView{
    
}
-(void) loadParcels:(NSArray*) array{
    arrayParcels = [[NSMutableArray alloc] initWithArray:array];
    [_table reloadData];
}
-(UITableViewCell *)tableView:(UITableView *)tableView cellForRowAtIndexPath:(NSIndexPath *)indexPath{
    
    if(indexPath.row == 0){
       
        ParcelsViewCell *cell =  (ParcelsViewCell*) [tableView dequeueReusableCellWithIdentifier:@"HeaderParcels"];
        [cell.lblNumParcel setFont:[BaseView getDefatulFont:Micro bold:NO]];
        [cell.lblNumParcel setText:NSLocalizedString(@"Parcela", @"")];
        [cell.lblDate setFont:[BaseView getDefatulFont:Micro bold:NO]];
        [cell.lblDate setText:NSLocalizedString(@"Vencimento", @"")];
        [cell.lblValue setFont:[BaseView getDefatulFont:Micro bold:NO]];
        [cell.lblValue setText:NSLocalizedString(@"ValorParcela", @"")];
        [cell.lblStatus setFont:[BaseView getDefatulFont:Micro bold:NO]];
        [cell.lblStatus setText:NSLocalizedString(@"Status", @"")];
        [cell.bgView setBackgroundColor:[UIColor whiteColor]];
        
        return cell;
    
    }else{
        ParcelsViewCell *cell =  (ParcelsViewCell*) [tableView dequeueReusableCellWithIdentifier:@"CellParcels"];

        [cell.lblNumParcel setFont:[BaseView getDefatulFont:Small bold:NO]];
        [cell.lblDate setFont:[BaseView getDefatulFont:Small bold:NO]];
        [cell.lblValue setFont:[BaseView getDefatulFont:Small bold:YES]];
        [cell.lblStatus setFont:[BaseView getDefatulFont:Small bold:NO]];
        
        PaymentBeans *beans = [arrayParcels objectAtIndex:indexPath.row-1];
        [cell.lblNumParcel setText:[NSString stringWithFormat:@"%d",beans.number]];
        
        
        
        
        NSDateFormatter *dateformat = [[NSDateFormatter alloc] init];
        [dateformat setDateFormat:@"yyyy-MM-dd'T'HH:mm:ss"];
        NSDate *dueDate = [dateformat dateFromString: beans.dueDate];
        [dateformat setTimeZone:[NSTimeZone localTimeZone]];
        [dateformat setDateFormat:@"dd/MM/yyyy"];
        
        NSString *datePayment = [dateformat stringFromDate:dueDate];

        
        [cell.lblDate setText:datePayment];
        [cell.lblDate setHidden:NO];
        
        if([beans.dueDate isEqualToString:@""] || [datePayment isEqualToString:@""]){
             id<GAITracker> tracker = [[GAI sharedInstance] defaultTracker];
        
        
            [tracker send:[[GAIDictionaryBuilder createEventWithCategory:@"ERROR"
                                                                  action:@"DATE EMPTY"
                                                                   label:[NSString stringWithFormat:@"DueDate: %@ - Formated Date: %@", beans.dueDate, datePayment]
                                                                   value:nil] build]];
        }
        
        
        NSNumberFormatter *numberFormatter = [[NSNumberFormatter alloc] init];
        [numberFormatter setLocale:[NSLocale localeWithLocaleIdentifier:@"pt_BR"]];
        [numberFormatter setNumberStyle:NSNumberFormatterCurrencyStyle];
        

        [cell.lblValue setText:[numberFormatter stringFromNumber:[NSNumber numberWithFloat:beans.amountPayable]]];
        UIColor *bgColor;
        if(beans.status == 1){
            [cell.lblStatus setText:NSLocalizedString(@"Quitado", @"")];
            bgColor = [BaseView getColor:@"Verde"];
            [cell.lblStatus setTextColor:[BaseView getColor:@"Verde"]];
            
<<<<<<< HEAD
        }else{
            NSMutableAttributedString *attributedString;
            UIColor *corDefault;
            if(beans.status == 2){
                 attributedString = [[NSMutableAttributedString alloc] initWithString:[NSString stringWithFormat:@"%@\n",NSLocalizedString(@"Atrasado", @"")]];
                corDefault = [BaseView getColor:@"Vermelho"];
                bgColor = [BaseView getColor:@"Vermelho"];
            }else{
                attributedString = [[NSMutableAttributedString alloc] initWithString:[NSString stringWithFormat:@"%@\n",NSLocalizedString(@"Pendente", @"")]];
=======
        }else {
  
            NSMutableAttributedString *attributedString;
            UIColor *corDefault;
            
            
            if(beans.status == 2){
                attributedString = [[NSMutableAttributedString alloc] initWithString:[NSString stringWithFormat:@"%@",NSLocalizedString(@"Atrasado", @"")]];
                corDefault = [BaseView getColor:@"Vermelho"];
                bgColor = [BaseView getColor:@"Vermelho"];
            }else if(beans.status == 3){
                attributedString = [[NSMutableAttributedString alloc] initWithString:[NSString stringWithFormat:@"%@",NSLocalizedString(@"EmProcessamento", @"")]];
                corDefault = [BaseView getColor:@"AzulClaro"];
                bgColor = [BaseView getColor:@"AzulClaro"];
                [cell.lblStatus setFont:[BaseView getDefatulFont:Nano bold:NO]];
            }else if(beans.status == 4){
                attributedString = [[NSMutableAttributedString alloc] initWithString:[NSString stringWithFormat:@"%@",NSLocalizedString(@"EmAnalise", @"")]];
                corDefault = [BaseView getColor:@"AzulClaro"];
                bgColor = [BaseView getColor:@"AzulClaro"];
            }else{
                attributedString = [[NSMutableAttributedString alloc] initWithString:[NSString stringWithFormat:@"%@",NSLocalizedString(@"Pendente", @"")]];
>>>>>>> FixAliroPhones
                corDefault = [BaseView getColor:@"Laranja"];
                bgColor = [BaseView getColor:@"Laranja"];
            }
            
<<<<<<< HEAD
    
            if(beans.showComponent == 1){
=======
            
  
            if(beans.showComponent == 1 || beans.showComponent == 4 || beans.showComponent == 7){
                [attributedString appendAttributedString:[[NSAttributedString alloc] initWithString:@"\n"]];
                
>>>>>>> FixAliroPhones
                //barcode
                NSTextAttachment *textAttachment = [[NSTextAttachment alloc] init];
                textAttachment.image = [UIImage imageNamed:@"boleto_icon.png"];
                
                NSAttributedString *attrStringWithImage = [NSAttributedString attributedStringWithAttachment:textAttachment];
                
                [attributedString appendAttributedString:attrStringWithImage];
                
                [attributedString appendAttributedString:[[NSAttributedString alloc] initWithString:@" "]];
                NSMutableAttributedString *attrStringFinal = [[NSMutableAttributedString alloc] initWithString:[NSString stringWithFormat:@"%@", NSLocalizedString(@"PagueAgora", @"")]];
                
                [attrStringFinal addAttribute:NSForegroundColorAttributeName
                                        value:corDefault range:NSMakeRange(0, [NSLocalizedString(@"PagueAgora", @"") length])];
                
                [attrStringFinal addAttribute:NSUnderlineColorAttributeName
                                        value:corDefault range:NSMakeRange(0, [NSLocalizedString(@"PagueAgora", @"") length])];
                [attrStringFinal addAttribute:NSUnderlineStyleAttributeName
                                        value:[NSNumber numberWithInt:NSUnderlineStyleSingle] range:NSMakeRange(0, [NSLocalizedString(@"PagueAgora", @"") length])];
                [attrStringFinal addAttribute:NSFontAttributeName value:[BaseView getDefatulFont:Nano bold:NO] range:NSMakeRange(0, [NSLocalizedString(@"PagueAgora", @"") length])];
                [attributedString appendAttributedString:attrStringFinal];
                [attributedString addAttribute:NSForegroundColorAttributeName value:corDefault range:NSMakeRange(0, attributedString.length)];
                
<<<<<<< HEAD
            }else if(beans.showComponent == 2){
=======
            }else if(beans.showComponent == 2  || beans.showComponent == 5 || beans.showComponent == 6){
                [attributedString appendAttributedString:[[NSAttributedString alloc] initWithString:@"\n"]];
>>>>>>> FixAliroPhones
                //extends
                NSTextAttachment *textAttachment = [[NSTextAttachment alloc] init];
                textAttachment.image = [UIImage imageNamed:@"red_arrow.png"];
                
                NSAttributedString *attrStringWithImage = [NSAttributedString attributedStringWithAttachment:textAttachment];
                
                [attributedString appendAttributedString:attrStringWithImage];
                
                [attributedString appendAttributedString:[[NSAttributedString alloc] initWithString:@" "]];
                NSMutableAttributedString *attrStringFinal = [[NSMutableAttributedString alloc] initWithString:[NSString stringWithFormat:@"%@", NSLocalizedString(@"Prorrogar", @"")]];
                
                
                
                [attrStringFinal addAttribute:NSForegroundColorAttributeName
                                        value:corDefault range:NSMakeRange(0, [NSLocalizedString(@"Prorrogar", @"") length])];
                
                [attrStringFinal addAttribute:NSUnderlineColorAttributeName
                                        value:corDefault range:NSMakeRange(0, [NSLocalizedString(@"Prorrogar", @"") length])];
                [attrStringFinal addAttribute:NSUnderlineStyleAttributeName
                                        value:[NSNumber numberWithInt:NSUnderlineStyleSingle] range:NSMakeRange(0, [NSLocalizedString(@"Prorrogar", @"") length])];
                [attrStringFinal addAttribute:NSFontAttributeName value:[BaseView getDefatulFont:Nano bold:NO] range:NSMakeRange(0, [NSLocalizedString(@"Prorrogar", @"") length])];
                
                [attributedString appendAttributedString:attrStringFinal];
                
<<<<<<< HEAD
                [attributedString addAttribute:NSForegroundColorAttributeName
                                         value:corDefault range:NSMakeRange(0, attributedString.length)];
                
            }else{
                [cell.lblStatus setText:NSLocalizedString(@"Pendente", @"")];
=======
                [attributedString addAttribute:NSForegroundColorAttributeName
                                         value:corDefault range:NSMakeRange(0, attributedString.length)];
            }else if(beans.showComponent == 3){
                [attributedString appendAttributedString:[[NSAttributedString alloc] initWithString:@"\n"]];
                //online payment
                NSTextAttachment *textAttachment = [[NSTextAttachment alloc] init];
                textAttachment.image = [UIImage imageNamed:@"boleto_icon.png"];

                NSAttributedString *attrStringWithImage = [NSAttributedString attributedStringWithAttachment:textAttachment];

                [attributedString appendAttributedString:attrStringWithImage];

                [attributedString appendAttributedString:[[NSAttributedString alloc] initWithString:@" "]];
                NSMutableAttributedString *attrStringFinal = [[NSMutableAttributedString alloc] initWithString:[NSString stringWithFormat:@"%@", NSLocalizedString(@"PagueAgora", @"")]];
                
                
                
                [attrStringFinal addAttribute:NSForegroundColorAttributeName
                                        value:corDefault range:NSMakeRange(0, [NSLocalizedString(@"PagueAgora", @"") length])];
                
                [attrStringFinal addAttribute:NSUnderlineColorAttributeName
                                        value:corDefault range:NSMakeRange(0, [NSLocalizedString(@"PagueAgora", @"") length])];
                [attrStringFinal addAttribute:NSUnderlineStyleAttributeName
                                        value:[NSNumber numberWithInt:NSUnderlineStyleSingle] range:NSMakeRange(0, [NSLocalizedString(@"PagueAgora", @"") length])];
                [attrStringFinal addAttribute:NSFontAttributeName value:[BaseView getDefatulFont:Nano bold:NO] range:NSMakeRange(0, [NSLocalizedString(@"PagueAgora", @"") length])];
                
                [attributedString appendAttributedString:attrStringFinal];
                
                [attributedString addAttribute:NSForegroundColorAttributeName
                                         value:corDefault range:NSMakeRange(0, attributedString.length)];
            }else if(beans.showComponent == 8){
                //consulta online
                [attributedString appendAttributedString:[[NSAttributedString alloc] initWithString:@"\n"]];

//                NSTextAttachment *textAttachment = [[NSTextAttachment alloc] init];
//                textAttachment.image = [UIImage imageNamed:@"red_arrow.png"];
//
//                NSAttributedString *attrStringWithImage = [NSAttributedString attributedStringWithAttachment:textAttachment];
//
//                [attributedString appendAttributedString:attrStringWithImage];
//
//                [attributedString appendAttributedString:[[NSAttributedString alloc] initWithString:@" "]];
                NSMutableAttributedString *attrStringFinal = [[NSMutableAttributedString alloc] initWithString:[NSString stringWithFormat:@"%@", NSLocalizedString(@"Consultar", @"")]];
                
                
                
                [attrStringFinal addAttribute:NSForegroundColorAttributeName
                                        value:corDefault range:NSMakeRange(0, [NSLocalizedString(@"Consultar", @"") length])];
                
                [attrStringFinal addAttribute:NSUnderlineColorAttributeName
                                        value:corDefault range:NSMakeRange(0, [NSLocalizedString(@"Consultar", @"") length])];
                [attrStringFinal addAttribute:NSUnderlineStyleAttributeName
                                        value:[NSNumber numberWithInt:NSUnderlineStyleSingle] range:NSMakeRange(0, [NSLocalizedString(@"Consultar", @"") length])];
                [attrStringFinal addAttribute:NSFontAttributeName value:[BaseView getDefatulFont:Nano bold:NO] range:NSMakeRange(0, [NSLocalizedString(@"Consultar", @"") length])];
                
                [attributedString appendAttributedString:attrStringFinal];
                
                [attributedString addAttribute:NSForegroundColorAttributeName
                                         value:corDefault range:NSMakeRange(0, attributedString.length)];
>>>>>>> FixAliroPhones
            }
            
            [cell.lblStatus setAttributedText:attributedString];
            [cell.lblStatus setTextColor:corDefault];
<<<<<<< HEAD
            
=======
>>>>>>> FixAliroPhones
            
        }
        [cell.bgView setBackgroundColor:[bgColor colorWithAlphaComponent:0.20f]];
        return cell;
    }
    
}
-(NSInteger)numberOfSectionsInTableView:(UITableView *)tableView{
    return  1;
}
-(NSInteger)tableView:(UITableView *)tableView numberOfRowsInSection:(NSInteger)section{
    return [arrayParcels count]+1;
}
-(CGFloat)tableView:(UITableView *)tableView heightForHeaderInSection:(NSInteger)section{
    return 0;
}
- (UIView *)tableView:(UITableView *)tableView viewForHeaderInSection:(NSInteger)section{
//    UIView *view = [[UIView alloc] initWithFrame:CGRectMake(0, 0, CGRectGetWidth(tableView.frame), 40)];
//    
//    UILabel *lblParcel = [[UILabel alloc] initWithFrame:CGRectMake(5, 0, 35, 25)];
//    [lblParcel setText:@"Parc."];
//    [view addSubview:lblParcel];
//    
//    UILabel *lblVencimento = [[UILabel alloc] initWithFrame:CGRectMake(43, 0, 70, 25)];
//    [lblVencimento setText:@"Vencimento"];
//    [view addSubview:lblVencimento];
//    
//    UILabel *lblValor = [[UILabel alloc] initWithFrame:CGRectMake(136, 0, 60, 25)];
//    [lblValor setText:@"Valor"];
//    [view addSubview:lblValor];
//
//    UILabel *lblStatus = [[UILabel alloc] initWithFrame:CGRectMake(196, 0, 40, 25)];
//    [lblStatus setText:@"Status"];
//    [view addSubview:lblStatus];
//    
//    [lblParcel setFont:[BaseView getDefatulFont:Micro bold:NO]];
//    [lblVencimento setFont:[BaseView getDefatulFont:Micro bold:NO]];
//    [lblValor setFont:[BaseView getDefatulFont:Micro bold:NO]];
//    [lblStatus setFont:[BaseView getDefatulFont:Micro bold:NO]];
    
    return nil;
    
}
-(CGFloat)tableView:(UITableView *)tableView heightForRowAtIndexPath:(NSIndexPath *)indexPath{
    if(indexPath.row == 0){
        return 25;
    }else{
        return 60;
    }
}

-(IBAction)closePopUp:(id)sender{
    [_popupBarCode setHidden:YES];
}
-(void) hideBarCode{
    [_popupBarCode  setHidden:YES];
}

-(void) showPopUpLoading{
    [_activity setHidden:NO];
    [_activity startAnimating];
    [_popupBarCode setHidden:NO];
    [_btOk setHidden:YES];
}
-(void) showBarCode:(NSString*) barcode{
    [_lblDescription setText:[NSString stringWithFormat:@"%@\n\n%@",NSLocalizedString(@"CÃ³digoDeBarrasMsg", @""), barcode]];
    [_lblDescription setFont:[BaseView getDefatulFont:Small bold:NO]];
    [_lblDescription setTextColor:[BaseView getColor:@"Branco"]];
    [_lblDescription setHidden:NO];
    [_lblTitle setText:NSLocalizedString(@"CÃ³digoDeBarras", @"")];
    [_lblTitle setFont:[BaseView getDefatulFont:Medium bold:YES]];
    [_lblTitle setTextColor:[BaseView getColor:@"Verde"]];
    [_lblTitle setHidden:NO];
    [_imgIcon setHidden:NO];
    [_btOk setHidden:NO];
    [_activity setHidden:YES];
    
    [_activity stopAnimating];

}

@end
